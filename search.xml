<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Calculate Permutations and Combinations of Elements Using Python</title>
    <url>/2024/04/08/Calculate%20permutations%20and%20combinations%20of%20elements%20using%20Python/</url>
    <content><![CDATA[<h2 id="itertoolscombinations"><a class="markdownIt-Anchor" href="#itertoolscombinations"></a> itertools.combinations</h2>
<p>Generates all possible combinations of elements of a specified length:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(5,2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line"><span class="comment"># Compute combinations of length 2 without replacement</span></span><br><span class="line">combinations_result = <span class="built_in">list</span>(itertools.combinations(<span class="built_in">str</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(combinations_result)</span><br></pre></td></tr></table></figure>
<p>The output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(5,3)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line"><span class="comment"># Compute combinations of length 3 without replacement</span></span><br><span class="line">combinations_result = <span class="built_in">list</span>(itertools.combinations(<span class="built_in">str</span>, <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(combinations_result)</span><br></pre></td></tr></table></figure>
<p>The output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<p>Also, you can use the <strong>.join() function</strong> to combine the characters of each combination:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line"><span class="comment"># Compute combinations of length 3 without replacement</span></span><br><span class="line">combinations_result = <span class="built_in">list</span>(itertools.combinations(<span class="built_in">str</span>, <span class="number">3</span>))</span><br><span class="line"><span class="comment"># Combine characters for each combination</span></span><br><span class="line">new_result = []</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> combinations_result:</span><br><span class="line">    new_result.append(<span class="string">&quot;&quot;</span>.join(c))</span><br><span class="line"><span class="built_in">print</span>(new_result)</span><br></pre></td></tr></table></figure>
<p>The output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;ABC&#x27;</span>, <span class="string">&#x27;ABD&#x27;</span>, <span class="string">&#x27;ABE&#x27;</span>, <span class="string">&#x27;ACD&#x27;</span>, <span class="string">&#x27;ACE&#x27;</span>, <span class="string">&#x27;ADE&#x27;</span>, <span class="string">&#x27;BCD&#x27;</span>, <span class="string">&#x27;BCE&#x27;</span>, <span class="string">&#x27;BDE&#x27;</span>, <span class="string">&#x27;CDE&#x27;</span>]</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="itertoolscombinations_with_replacement"><a class="markdownIt-Anchor" href="#itertoolscombinations_with_replacement"></a> itertools.combinations_with_replacement</h2>
<p>Generates all possible combinations of elements of a specified length:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line"><span class="comment"># Compute combinations of length 2, with replacement</span></span><br><span class="line">combinations_with_replacement_result = <span class="built_in">list</span>(itertools.combinations_with_replacement(<span class="built_in">str</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(combinations_with_replacement_result)</span><br></pre></td></tr></table></figure>
<p>The output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;E&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="itertoolspermutations"><a class="markdownIt-Anchor" href="#itertoolspermutations"></a> itertools.permutations</h2>
<p>Generates all possible permutations of elements of a specified length:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A(5,2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line"><span class="comment"># Compute permutations of length 2</span></span><br><span class="line">permutations_result = <span class="built_in">list</span>(itertools.permutations(<span class="built_in">str</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(permutations_result)</span><br></pre></td></tr></table></figure>
<p>The output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A(5,4)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line"><span class="comment"># Compute permutations of length 4</span></span><br><span class="line">permutations_result = <span class="built_in">list</span>(itertools.permutations(<span class="built_in">str</span>, <span class="number">4</span>))</span><br><span class="line"><span class="built_in">print</span>(permutations_result)</span><br></pre></td></tr></table></figure>
<p>The output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;E&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>)]</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo NexT Theme Configuration</title>
    <url>/2024/04/07/Hexo-Next-Theme-Configuration/</url>
    <content><![CDATA[<h2 id="install-next-theme"><a class="markdownIt-Anchor" href="#install-next-theme"></a> Install NexT theme</h2>
<p>Firlst, you need to install the NexT theme, you can enter the following code:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>
<p><img data-src="/images/Hexo-Next-Theme-Configuration/install_next.png" alt="" /></p>
<hr />
<h2 id="local-search-function"><a class="markdownIt-Anchor" href="#local-search-function"></a> Local search function</h2>
<p>Install the following plug-ins:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>Add the following code to <em>Hexo _config.yml</em>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br></pre></td></tr></table></figure>
<p>Then, you need to open the local search function in <em>NexT _config.yml</em>:</p>
<p><img data-src="/images/Hexo-Next-Theme-Configuration/local_search.png" alt="" /></p>
<p>Now, you can see this on your website:</p>
<p><img data-src="/images/Hexo-Next-Theme-Configuration/search.jpg" alt="" /></p>
<hr />
<h2 id="article-excerpt"><a class="markdownIt-Anchor" href="#article-excerpt"></a> Article excerpt</h2>
<p>Install <a href="https://so.csdn.net/so/search?q=hexo&amp;spm=1001.2101.3001.7020">hexo</a>-excerpt via cmd:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure>
<p>Then, Add the following code to <em>Hexo _config.yml</em>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">excerpt:</span><br><span class="line">  depth: 5  </span><br><span class="line">  excerpt_excludes: []</span><br><span class="line">  more_excludes: []</span><br><span class="line">  hideWholePostExcerpts: true</span><br></pre></td></tr></table></figure>
<p>Now, you can see the &quot;Read More&quot; button on your website:</p>
<p><img data-src="/images/Hexo-Next-Theme-Configuration/read_more.jpg" alt="" /></p>
<hr />
<h2 id="code-block-theme"><a class="markdownIt-Anchor" href="#code-block-theme"></a> Code block theme</h2>
<p>You can change the background color of the code block here in <em>NexT _config.yml</em>, and there are many themes at <a href="https://theme-next.js.org/highlight/">https://theme-next.js.org/highlight/</a>.</p>
<p><img data-src="/images/Hexo-Next-Theme-Configuration/codeblock.png" alt="" /></p>
<hr />
<h2 id="article-word-count-and-reading-time"><a class="markdownIt-Anchor" href="#article-word-count-and-reading-time"></a> Article word count and reading time</h2>
<p>Install hexo-word-counter via cmd:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-word-counter</span><br></pre></td></tr></table></figure>
<p>Then, add the following code at the end of the <em>Hexo _config.yml</em>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>
<p>Finally, modify the <em>NexT _config.yml</em>:</p>
<p><img data-src="/images/Hexo-Next-Theme-Configuration/symbols_count_time.png" alt="" /></p>
<hr />
<h2 id="reference-links"><a class="markdownIt-Anchor" href="#reference-links"></a> Reference Links</h2>
<ul>
<li><a href="https://hexo-next.readthedocs.io/zh-cn/latest/next/advanced/%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1/">搜索服务 - Hexo-NexT</a></li>
<li><a href="https://blog.csdn.net/sinat_41696687/article/details/115021491">解决Hexo博客的Next主题中阅读全文没有auto_excerpt的问题-CSDN博客</a></li>
<li><a href="https://hexo-next.readthedocs.io/zh-cn/latest/next/advanced/%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1/">https://hexo-next.readthedocs.io/zh-cn/latest/next/advanced/字数统计/</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Hexo-NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Build A Personal Website with Github and Hexo</title>
    <url>/2024/04/07/How-to-Build-A-Personal-Website-with-Github-and-Hexo/</url>
    <content><![CDATA[<h2 id="install-nodejs-and-git"><a class="markdownIt-Anchor" href="#install-nodejs-and-git"></a> Install Node.js and Git</h2>
<p>First, you'll need to install Node.js and Git, download and install the Node.js from [here](<a href="https://nodejs.org/en">Node.js — Run JavaScript Everywhere (nodejs.org)</a>).</p>
<p>You can check if the Node.js and Git installation are successful by typing these:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="create-a-github-pages-repository"><a class="markdownIt-Anchor" href="#create-a-github-pages-repository"></a> Create a Github Pages repository</h2>
<p>Then you'll need to sign up for a Github account and create a Github Pages repository.</p>
<hr />
<h2 id="install-and-initialize-hexo"><a class="markdownIt-Anchor" href="#install-and-initialize-hexo"></a> Install and Initialize Hexo</h2>
<p>Next, you need to install Hexo via cmd:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>Initialize Hexo:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p><img data-src="/images/How-to-Build-A-Personal-Website-with-Github-and-Hexo/successful_installation.png" alt="" /></p>
<p>Next, you'll be able to build and preview your website:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p><img data-src="/images/How-to-Build-A-Personal-Website-with-Github-and-Hexo/generate_deploy.png" alt="" /></p>
<p>Type the following URL: <a href="http://localhost:4000/">http://localhost:4000/</a> into your browser and you'll see:</p>
<p><img data-src="/images/How-to-Build-A-Personal-Website-with-Github-and-Hexo/welcome.png" alt="" /></p>
<p>Finally, you can choose the theme you are interested in and further beautify the site.</p>
<hr />
<h2 id="deploy-the-hexo-website-to-github-pages"><a class="markdownIt-Anchor" href="#deploy-the-hexo-website-to-github-pages"></a> Deploy the Hexo website to GitHub Pages</h2>
<p>First, you need to install hexo-deployer-git:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>Then modify the Deployment section at the end of the <em>Hexo _config.yml</em> file:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:your_github_name/your_github_name.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>
<p>Finally, visit https://your_github_name.github.io and you'll be able to see your website.</p>
<hr />
<h2 id="reference-links"><a class="markdownIt-Anchor" href="#reference-links"></a> Reference Links</h2>
<ul>
<li><a href="https://theme-next.js.org/docs/getting-started/">Getting Started | NexT (theme-next.js.org)</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Use Gurobi in Python to Solve Integer Programming Problems</title>
    <url>/2024/04/11/Use-Gurobi-in-Python-to-solve-integer-programming-problems/</url>
    <content><![CDATA[<h2 id="install-the-gurobi-library"><a class="markdownIt-Anchor" href="#install-the-gurobi-library"></a> Install the Gurobi library</h2>
<p>This package only allows solving problems on a limited scale.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install gurobipy</span><br></pre></td></tr></table></figure>
<p>Then, import it as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gurobipy <span class="keyword">as</span> grb</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h2>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>a</mi><mi>x</mi><mo>:</mo><mn>2</mn><mi>x</mi><mo>−</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">Max:2x-y
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span></p>
<p>S.T.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>+</mo><mn>2</mn><mi>y</mi><mo>&lt;</mo><mo>=</mo><mn>20</mn><mspace linebreak="newline"></mspace><mo>−</mo><mn>4</mn><mi>x</mi><mo>+</mo><mn>5</mn><mi>y</mi><mo>&lt;</mo><mo>=</mo><mn>10</mn><mspace linebreak="newline"></mspace><mo>−</mo><mi>x</mi><mo>+</mo><mn>2</mn><mi>y</mi><mo>&gt;</mo><mo>=</mo><mo>−</mo><mn>5</mn><mspace linebreak="newline"></mspace><mi>x</mi><mo>&gt;</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>g</mi><mi>e</mi><mi>r</mi><mspace linebreak="newline"></mspace><mi>y</mi><mo>&gt;</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>g</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">x+2y&lt;=20\\
-4x+5y&lt;=10\\
-x+2y&gt;=-5\\
x&gt;=0, Integer\\
y&gt;=0, Integer
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">4</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">5</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">5</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></span></p>
<hr />
<h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gurobipy <span class="keyword">as</span> grb</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build a model</span></span><br><span class="line">model = grb.Model(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define decision variables</span></span><br><span class="line">x = model.addVar(vtype=grb.GRB.INTEGER, name=<span class="string">&quot;x&quot;</span>)</span><br><span class="line">y = model.addVar(vtype=grb.GRB.INTEGER, name=<span class="string">&quot;y&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add constrains</span></span><br><span class="line">model.addConstr(x + <span class="number">2</span> * y &lt;= <span class="number">20</span>)</span><br><span class="line">model.addConstr(-<span class="number">4</span> * x + <span class="number">5</span> * y &lt;= <span class="number">10</span>)</span><br><span class="line">model.addConstr(-x + <span class="number">2</span> * y &gt;= -<span class="number">5</span>)</span><br><span class="line">model.addConstr(x &gt;= <span class="number">0</span>)</span><br><span class="line">model.addConstr(y &gt;= <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the objective function</span></span><br><span class="line">model.setObjective(<span class="number">2</span> * x - y, sense=grb.GRB.MAXIMIZE)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Solve the integer programming model</span></span><br><span class="line">model.optimize()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nThe value of the objective function: &quot;</span>, model.objVal)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> model.getVars():</span><br><span class="line">    <span class="built_in">print</span>(i.varname, <span class="string">&quot; = &quot;</span>, i.x)</span><br></pre></td></tr></table></figure>
<p>The program output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Optimize a model <span class="keyword">with</span> <span class="number">5</span> rows, <span class="number">2</span> columns <span class="keyword">and</span> <span class="number">8</span> nonzeros</span><br><span class="line">Model fingerprint: <span class="number">0x4a44dc53</span></span><br><span class="line">Variable types: <span class="number">0</span> continuous, <span class="number">2</span> integer (<span class="number">0</span> binary)</span><br><span class="line">Coefficient statistics:</span><br><span class="line">  Matrix <span class="built_in">range</span>     [<span class="number">1e+00</span>, <span class="number">5e+00</span>]</span><br><span class="line">  Objective <span class="built_in">range</span>  [<span class="number">1e+00</span>, <span class="number">2e+00</span>]</span><br><span class="line">  Bounds <span class="built_in">range</span>     [<span class="number">0e+00</span>, <span class="number">0e+00</span>]</span><br><span class="line">  RHS <span class="built_in">range</span>        [<span class="number">5e+00</span>, <span class="number">2e+01</span>]</span><br><span class="line">Found heuristic solution: objective <span class="number">10.0000000</span></span><br><span class="line">Presolve removed <span class="number">2</span> rows <span class="keyword">and</span> <span class="number">0</span> columns</span><br><span class="line">Presolve time: <span class="number">0.00</span>s</span><br><span class="line">Presolved: <span class="number">3</span> rows, <span class="number">2</span> columns, <span class="number">6</span> nonzeros</span><br><span class="line">Variable types: <span class="number">0</span> continuous, <span class="number">2</span> integer (<span class="number">0</span> binary)</span><br><span class="line">Found heuristic solution: objective <span class="number">11.0000000</span></span><br><span class="line"></span><br><span class="line">Root relaxation: objective <span class="number">2.050000e+01</span>, <span class="number">1</span> iterations, <span class="number">0.00</span> seconds (<span class="number">0.00</span> work units)</span><br><span class="line"></span><br><span class="line">    Nodes    |    Current Node    |     Objective Bounds      |     Work</span><br><span class="line"> Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>   <span class="number">20.50000</span>    <span class="number">0</span>    <span class="number">1</span>   <span class="number">11.00000</span>   <span class="number">20.50000</span>  <span class="number">86.4</span>%     -    0s</span><br><span class="line">H    <span class="number">0</span>     <span class="number">0</span>                      <span class="number">20.0000000</span>   <span class="number">20.50000</span>  <span class="number">2.50</span>%     -    0s</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>   <span class="number">20.50000</span>    <span class="number">0</span>    <span class="number">1</span>   <span class="number">20.00000</span>   <span class="number">20.50000</span>  <span class="number">2.50</span>%     -    0s</span><br><span class="line"></span><br><span class="line">Explored <span class="number">1</span> nodes (<span class="number">1</span> simplex iterations) <span class="keyword">in</span> <span class="number">0.00</span> seconds (<span class="number">0.00</span> work units)</span><br><span class="line">Thread count was <span class="number">12</span> (of <span class="number">12</span> available processors)</span><br><span class="line"></span><br><span class="line">Solution count <span class="number">3</span>: <span class="number">20</span> <span class="number">11</span> <span class="number">10</span> </span><br><span class="line"></span><br><span class="line">Optimal solution found (tolerance <span class="number">1.00e-04</span>)</span><br><span class="line">Best objective <span class="number">2.000000000000e+01</span>, best bound <span class="number">2.000000000000e+01</span>, gap <span class="number">0.0000</span>%</span><br><span class="line"></span><br><span class="line">The value of the objective function:  <span class="number">20.0</span></span><br><span class="line">x  =  <span class="number">12.0</span></span><br><span class="line">y  =  <span class="number">4.0</span></span><br></pre></td></tr></table></figure>
<p>Alternatively, we can <strong>use matrices to represent the parameters of the model</strong>, as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gurobipy <span class="keyword">as</span> grb</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build a model</span></span><br><span class="line">model = grb.Model(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define decision variables</span></span><br><span class="line">x = model.addVars(<span class="number">2</span>, lb=<span class="number">0</span>, ub=grb.GRB.INFINITY, vtype=grb.GRB.INTEGER, name=<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build parameter matrices</span></span><br><span class="line">obj_paras = [<span class="number">2</span>, -<span class="number">1</span>]</span><br><span class="line">var_paras = [[<span class="number">1</span>, <span class="number">2</span>], [-<span class="number">4</span>, <span class="number">5</span>], [<span class="number">1</span>, -<span class="number">2</span>]]</span><br><span class="line">r = [<span class="number">20</span>, <span class="number">10</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add constrains</span></span><br><span class="line">model.addConstrs(x.prod(var_paras[i]) &lt;= r[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the objective function</span></span><br><span class="line">model.setObjective(x.prod(obj_paras), grb.GRB.MAXIMIZE)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Solve the integer programming model</span></span><br><span class="line">model.optimize()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nThe value of the objective function: &quot;</span>, model.objVal)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> model.getVars():</span><br><span class="line">    <span class="built_in">print</span>(i.varname, <span class="string">&quot; = &quot;</span>, i.x)</span><br></pre></td></tr></table></figure>
<p>The program output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Optimize a model <span class="keyword">with</span> <span class="number">3</span> rows, <span class="number">2</span> columns <span class="keyword">and</span> <span class="number">6</span> nonzeros</span><br><span class="line">Model fingerprint: <span class="number">0x7252d5fe</span></span><br><span class="line">Variable types: <span class="number">0</span> continuous, <span class="number">2</span> integer (<span class="number">0</span> binary)</span><br><span class="line">Coefficient statistics:</span><br><span class="line">  Matrix <span class="built_in">range</span>     [<span class="number">1e+00</span>, <span class="number">5e+00</span>]</span><br><span class="line">  Objective <span class="built_in">range</span>  [<span class="number">1e+00</span>, <span class="number">2e+00</span>]</span><br><span class="line">  Bounds <span class="built_in">range</span>     [<span class="number">0e+00</span>, <span class="number">0e+00</span>]</span><br><span class="line">  RHS <span class="built_in">range</span>        [<span class="number">5e+00</span>, <span class="number">2e+01</span>]</span><br><span class="line">Found heuristic solution: objective <span class="number">10.0000000</span></span><br><span class="line">Presolve time: <span class="number">0.00</span>s</span><br><span class="line">Presolved: <span class="number">3</span> rows, <span class="number">2</span> columns, <span class="number">6</span> nonzeros</span><br><span class="line">Variable types: <span class="number">0</span> continuous, <span class="number">2</span> integer (<span class="number">0</span> binary)</span><br><span class="line">Found heuristic solution: objective <span class="number">11.0000000</span></span><br><span class="line"></span><br><span class="line">Root relaxation: objective <span class="number">2.050000e+01</span>, <span class="number">1</span> iterations, <span class="number">0.00</span> seconds (<span class="number">0.00</span> work units)</span><br><span class="line"></span><br><span class="line">    Nodes    |    Current Node    |     Objective Bounds      |     Work</span><br><span class="line"> Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>   <span class="number">20.50000</span>    <span class="number">0</span>    <span class="number">1</span>   <span class="number">11.00000</span>   <span class="number">20.50000</span>  <span class="number">86.4</span>%     -    0s</span><br><span class="line">H    <span class="number">0</span>     <span class="number">0</span>                      <span class="number">20.0000000</span>   <span class="number">20.50000</span>  <span class="number">2.50</span>%     -    0s</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>   <span class="number">20.50000</span>    <span class="number">0</span>    <span class="number">1</span>   <span class="number">20.00000</span>   <span class="number">20.50000</span>  <span class="number">2.50</span>%     -    0s</span><br><span class="line"></span><br><span class="line">Explored <span class="number">1</span> nodes (<span class="number">1</span> simplex iterations) <span class="keyword">in</span> <span class="number">0.00</span> seconds (<span class="number">0.00</span> work units)</span><br><span class="line">Thread count was <span class="number">12</span> (of <span class="number">12</span> available processors)</span><br><span class="line"></span><br><span class="line">Solution count <span class="number">3</span>: <span class="number">20</span> <span class="number">11</span> <span class="number">10</span> </span><br><span class="line"></span><br><span class="line">Optimal solution found (tolerance <span class="number">1.00e-04</span>)</span><br><span class="line">Best objective <span class="number">2.000000000000e+01</span>, best bound <span class="number">2.000000000000e+01</span>, gap <span class="number">0.0000</span>%</span><br><span class="line"></span><br><span class="line">The value of the objective function:  <span class="number">20.0</span></span><br><span class="line">x[<span class="number">0</span>]  =  <span class="number">12.0</span></span><br><span class="line">x[<span class="number">1</span>]  =  <span class="number">4.0</span></span><br></pre></td></tr></table></figure>
<hr />
<h2 id="reference-links"><a class="markdownIt-Anchor" href="#reference-links"></a> Reference Links</h2>
<ul>
<li><a href="https://pypi.org/project/gurobipy/">gurobipy · PyPI</a></li>
<li><a href="https://www.gurobi.com/">The Leader in Decision Intelligence Technology - Gurobi Optimization</a></li>
</ul>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Gurobi</tag>
      </tags>
  </entry>
  <entry>
    <title>Commonly Used Plotting Functions in the Python-OpenCV Library</title>
    <url>/2024/04/08/Commonly-used-plotting-functions-in-the-Python-OpenCV-library/</url>
    <content><![CDATA[<h2 id="installation-and-import-of-opencv-in-python"><a class="markdownIt-Anchor" href="#installation-and-import-of-opencv-in-python"></a> Installation and Import of OpenCV in Python</h2>
<p>Execute the following pip command to complete the installation of the OpenCV library:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install opencv-python</span><br></pre></td></tr></table></figure>
<p><img data-src="/images/Python-OpenCV-library/install.png" alt="" /></p>
<p>After the installation is complete, import the cv2 module:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br></pre></td></tr></table></figure>
<hr />
<h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2>
<h2 id="cv2line"><a class="markdownIt-Anchor" href="#cv2line"></a> cv2.line()</h2>
<p><img data-src="/images/Python-OpenCV-library/line.jpg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cv2.line(img, pt1, pt2, color, thickness, lineType, shift)</span></span><br><span class="line"><span class="comment"># ————Parameter Description————</span></span><br><span class="line"><span class="comment"># img: Specify canvas</span></span><br><span class="line"><span class="comment"># pt1: (x, y)</span></span><br><span class="line"><span class="comment"># pt2: (x, y)</span></span><br><span class="line"><span class="comment"># color: (B,G,R)</span></span><br><span class="line"><span class="comment"># thickness: Line width</span></span><br><span class="line"><span class="comment"># lineType</span></span><br><span class="line"><span class="comment"># shift: Point coordinate accuracy</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = np.ones((<span class="number">300</span>, <span class="number">300</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.line(img, (<span class="number">100</span>, <span class="number">150</span>), (<span class="number">200</span>, <span class="number">150</span>), color=(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), thickness=<span class="number">2</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;img_name&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="cv2circle"><a class="markdownIt-Anchor" href="#cv2circle"></a> cv2.circle()</h2>
<p><img data-src="/images/Python-OpenCV-library/circle.jpg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cv2.circle(img, center, radius, color, thickness, lineType, shift)</span></span><br><span class="line"><span class="comment"># ————Parameter Description————</span></span><br><span class="line"><span class="comment"># img：Specify canvas</span></span><br><span class="line"><span class="comment"># center: (x, y)</span></span><br><span class="line"><span class="comment"># radius</span></span><br><span class="line"><span class="comment"># color: (B,G,R)</span></span><br><span class="line"><span class="comment"># thinkness: Line width, When &gt;0, it represents the thickness of the circular border (in pixels), when &lt;0, it represents a solid circle.</span></span><br><span class="line"><span class="comment"># lineType</span></span><br><span class="line"><span class="comment"># shift：Accuracy of circle center coordinates and radius</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = np.ones((<span class="number">300</span>, <span class="number">300</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.circle(img, center=(<span class="number">150</span>, <span class="number">150</span>), radius=<span class="number">50</span>, color=(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), thickness=-<span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;img_name&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="cv2ellipse"><a class="markdownIt-Anchor" href="#cv2ellipse"></a> cv2.ellipse()</h2>
<p><img data-src="/images/Python-OpenCV-library/ellipse.jpg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cv2.ellipse(img, center, axes, angle, startAngle, endAngle, color, thickness, lineType, shift)</span></span><br><span class="line"><span class="comment"># ————Parameter Description————</span></span><br><span class="line"><span class="comment"># img: Specify canvas</span></span><br><span class="line"><span class="comment"># center: (x, y), Ellipse center point coordinates</span></span><br><span class="line"><span class="comment"># axes: Ellipse size (major and minor axis)</span></span><br><span class="line"><span class="comment"># angle: Rotation angle (clockwise)</span></span><br><span class="line"><span class="comment"># startAngle: The starting angle for drawing (clockwise)</span></span><br><span class="line"><span class="comment"># endAngle: The ending angle of the drawing (drawing the entire ellipse: [0,360]; drawing the lower half of the ellipse: [0,180])</span></span><br><span class="line"><span class="comment"># color: (B,G,R)</span></span><br><span class="line"><span class="comment"># thickness: Line width</span></span><br><span class="line"><span class="comment"># lineType: default=8</span></span><br><span class="line"><span class="comment"># shift: Accuracy of center coordinates and axis length (default=0)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = np.ones((<span class="number">300</span>, <span class="number">300</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.ellipse(img, (<span class="number">150</span>, <span class="number">150</span>), (<span class="number">100</span>, <span class="number">50</span>), <span class="number">0</span>, <span class="number">0</span>, <span class="number">360</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;img_name&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="cv2rectangle"><a class="markdownIt-Anchor" href="#cv2rectangle"></a> cv2.rectangle()</h2>
<p><img data-src="/images/Python-OpenCV-library/rec.jpg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cv2.rectangle(img, pt1, pt2, color, thickness=None, lineType, shift)</span></span><br><span class="line"><span class="comment"># ————Parameter Description————</span></span><br><span class="line"><span class="comment"># img: Specify canvas</span></span><br><span class="line"><span class="comment"># pt1: (x, y)，Point coordinates of the upper left corner of the rectangle</span></span><br><span class="line"><span class="comment"># pt2: (x, y)，Point coordinates of the lower right corner of the rectangle</span></span><br><span class="line"><span class="comment"># color: (B,G,R)</span></span><br><span class="line"><span class="comment"># thinkness: Line width, When &gt;0, it represents the thickness of the rectangular border (in pixels), when &lt;0, it represents a solid rectangle.</span></span><br><span class="line"><span class="comment"># lineType</span></span><br><span class="line"><span class="comment"># shift: Point coordinate accuracy</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = np.ones((<span class="number">300</span>, <span class="number">300</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.rectangle(img, (<span class="number">100</span>, <span class="number">50</span>), (<span class="number">200</span>, <span class="number">200</span>), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>), -<span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;img_name&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="cv2polylines"><a class="markdownIt-Anchor" href="#cv2polylines"></a> cv2.polylines()</h2>
<p><img data-src="/images/Python-OpenCV-library/polylines.jpg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cv2.polylines(img, pts, isClosed, color, thickness, lineType, shift)</span></span><br><span class="line"><span class="comment"># ————Parameter Description————</span></span><br><span class="line"><span class="comment"># img: Specify canvas</span></span><br><span class="line"><span class="comment"># pts: (x, y)，point set</span></span><br><span class="line"><span class="comment"># isClosed: Whether the multiple line segments drawn are closed. True means closed and will connect the first and last points.</span></span><br><span class="line"><span class="comment"># color: (B,G,R)</span></span><br><span class="line"><span class="comment"># thickness: Line width</span></span><br><span class="line"><span class="comment"># lineType: default=8</span></span><br><span class="line"><span class="comment"># shift: Point coordinate accuracy</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = np.ones((<span class="number">300</span>, <span class="number">300</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">pts = np.array([[<span class="number">50</span>, <span class="number">50</span>], [<span class="number">70</span>, <span class="number">180</span>], [<span class="number">100</span>, <span class="number">200</span>], [<span class="number">200</span>, <span class="number">180</span>], [<span class="number">280</span>, <span class="number">100</span>]], np.int32)</span><br><span class="line">cv2.polylines(img, [pts], <span class="literal">True</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;img_name&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="cv2fillpoly"><a class="markdownIt-Anchor" href="#cv2fillpoly"></a> cv2.fillPoly()</h2>
<p><img data-src="/images/Python-OpenCV-library/fillPoly.jpg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cv2.fillPoly(img, pts, color)</span></span><br><span class="line"><span class="comment"># ————Parameter Description————</span></span><br><span class="line"><span class="comment"># img: Specify canvas</span></span><br><span class="line"><span class="comment"># pts: (x, y)，point set</span></span><br><span class="line"><span class="comment"># color: (B,G,R)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = np.ones((<span class="number">300</span>, <span class="number">300</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">pts = np.array([[<span class="number">50</span>, <span class="number">50</span>], [<span class="number">70</span>, <span class="number">180</span>], [<span class="number">100</span>, <span class="number">200</span>], [<span class="number">200</span>, <span class="number">180</span>], [<span class="number">280</span>, <span class="number">100</span>]], np.int32)</span><br><span class="line">cv2.fillPoly(img, [pts], (<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>))</span><br><span class="line">cv2.imshow(<span class="string">&#x27;img_name&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="cv2puttext"><a class="markdownIt-Anchor" href="#cv2puttext"></a> cv2.putText()</h2>
<p><img data-src="/images/Python-OpenCV-library/text.jpg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cv2.putText(img, text, org, fontFace, fontScale, color, thickness, lineType, bottomLeftOrigin)</span></span><br><span class="line"><span class="comment"># ————Parameter Description————</span></span><br><span class="line"><span class="comment"># img: Specify canvas</span></span><br><span class="line"><span class="comment"># text: Text content</span></span><br><span class="line"><span class="comment"># org: The drawing position, which is the coordinate of the lower left corner of the text string</span></span><br><span class="line"><span class="comment"># fontFace: Font type</span></span><br><span class="line"><span class="comment"># fontScale: Font size</span></span><br><span class="line"><span class="comment"># color</span></span><br><span class="line"><span class="comment"># thickness</span></span><br><span class="line"><span class="comment"># lineType: Boundary type</span></span><br><span class="line"><span class="comment"># bottomLeftOrigin: true/false. If true, the origin is in the lower left corner of the text image, otherwise it is in the upper left corner; if set to true, the text will be upside down, and the default is false.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = np.ones((<span class="number">300</span>, <span class="number">300</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.putText(img, <span class="string">&#x27;Hello Python!&#x27;</span>, (<span class="number">50</span>, <span class="number">150</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="number">1</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;img_name&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="cv2imshow"><a class="markdownIt-Anchor" href="#cv2imshow"></a> cv2.imshow()</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.imshow(<span class="string">&#x27;img_name&#x27;</span>, img)</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="cv2waitkey"><a class="markdownIt-Anchor" href="#cv2waitkey"></a> cv2.waitKey()</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.waitKey(delay_time)</span><br></pre></td></tr></table></figure>
<p>Usually you need to use waitKey() after imshow(). waitKey(0) means waiting until any key is pressed, and waitKey(n) means delaying n milliseconds to close the window.</p>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Use OR-Tools in Python to Solve Mixed Integer Programming Problems</title>
    <url>/2024/04/10/Use-the-ortools-library-in-Python-to-solve-mixed-integer-programming/</url>
    <content><![CDATA[<ul>
<li>
<p>This is an introduction to Google OR-Tools:</p>
<p><a href="https://developers.google.com/optimization/introduction">https://developers.google.com/optimization/introduction</a>.</p>
</li>
<li>
<p>This is the official tutorial for solving optimization problems in Python:</p>
<p><a href="https://developers.google.com/optimization/introduction/python">https://developers.google.com/optimization/introduction/python</a>.</p>
</li>
</ul>
<p>Now, let's use this tool to solve a simple mixed integer programming problem in Python.</p>
<hr />
<h2 id="install-the-or-tools-library"><a class="markdownIt-Anchor" href="#install-the-or-tools-library"></a> Install the OR-Tools library</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install ortools</span><br></pre></td></tr></table></figure>
<p><img data-src="/images/Use-the-ortools-library-in-Python/install.png" alt="" /></p>
<hr />
<h2 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h2>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>i</mi><mi>n</mi><mo>:</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>x</mi><mn>3</mn></msub><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">Min: x_1+2x_2+x_3\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p>
<p>S.T. :</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mn>1</mn><mo>:</mo><mn>20</mn><mo>&lt;</mo><mo>=</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>4.5</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>0.6</mn><msub><mi>x</mi><mn>3</mn></msub><mo>&lt;</mo><mo>=</mo><mn>65</mn><mspace linebreak="newline"></mspace><mi>r</mi><mn>2</mn><mo>:</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>5</mn><msub><mi>x</mi><mn>3</mn></msub><mo>&gt;</mo><mo>=</mo><mn>20</mn><mspace linebreak="newline"></mspace><mi>r</mi><mn>3</mn><mo>:</mo><mn>2.8</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>1.5</mn><msub><mi>x</mi><mn>3</mn></msub><mo>&gt;</mo><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">r1: 20&lt;=2x_1+4.5x_2-0.6x_3&lt;=65\\
	  r2:x_1+5x_3&gt;=20\\
	  r3:2.8x_2-1.5x_3&gt;=5
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">4</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">5</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">8</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span></span></p>
<p>Bounds:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>10</mn><mo>&lt;</mo><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>&lt;</mo><mo>=</mo><mn>60</mn><mo separator="true">,</mo><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>r</mi><mspace linebreak="newline"></mspace><msub><mi>x</mi><mn>2</mn></msub><mo>&gt;</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><msub><mi>x</mi><mn>3</mn></msub><mo>&gt;</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>r</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">10&lt;=x_1&lt;=60, Interger\\
x_2&gt;=0\\
x_3&gt;=0, Interger\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span class="mspace newline"></span></span></span></span></p>
<hr />
<h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ortools.linear_solver <span class="keyword">import</span> pywraplp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use CBC mixed integer programming solver</span></span><br><span class="line">solver = pywraplp.Solver(<span class="string">&#x27;test&#x27;</span>, pywraplp.Solver.CBC_MIXED_INTEGER_PROGRAMMING)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The type and domain in which the decision variable is defined</span></span><br><span class="line">x1 = solver.IntVar(<span class="number">10</span>, <span class="number">60</span>, <span class="string">&#x27;x1&#x27;</span>)</span><br><span class="line">x2 = solver.NumVar(<span class="number">0</span>, solver.infinity(), <span class="string">&#x27;x2&#x27;</span>)</span><br><span class="line">x3 = solver.IntVar(<span class="number">0</span>, solver.infinity(), <span class="string">&#x27;x3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add constraint: 20 &lt;= 2x1 +4.5x2 - 0.6x3 &lt;= 65</span></span><br><span class="line">constraint1 = solver.Constraint(<span class="number">20</span>, <span class="number">65</span>)</span><br><span class="line">constraint1.SetCoefficient(x1, <span class="number">2</span>)</span><br><span class="line">constraint1.SetCoefficient(x2, <span class="number">4.5</span>)</span><br><span class="line">constraint1.SetCoefficient(x3, -<span class="number">0.6</span>)</span><br><span class="line"><span class="comment"># Add constraint: x1 + 5x3 &gt;= 20</span></span><br><span class="line">constraint2 = solver.Constraint(<span class="number">20</span>, solver.infinity())</span><br><span class="line">constraint2.SetCoefficient(x1, <span class="number">1</span>)</span><br><span class="line">constraint2.SetCoefficient(x2, <span class="number">0</span>)</span><br><span class="line">constraint2.SetCoefficient(x3, <span class="number">5</span>)</span><br><span class="line"><span class="comment"># Add constraint: 2.8x2 - 1.5x3 &gt;= 5</span></span><br><span class="line">constraint2 = solver.Constraint(<span class="number">5</span>, solver.infinity())</span><br><span class="line">constraint2.SetCoefficient(x1, <span class="number">0</span>)</span><br><span class="line">constraint2.SetCoefficient(x2, <span class="number">2.8</span>)</span><br><span class="line">constraint2.SetCoefficient(x3, -<span class="number">1.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Objective Function: Min: x1 + 2x2 + x3</span></span><br><span class="line">objective = solver.Objective()</span><br><span class="line">objective.SetCoefficient(x1, <span class="number">1</span>)</span><br><span class="line">objective.SetCoefficient(x2, <span class="number">2</span>)</span><br><span class="line">objective.SetCoefficient(x3, <span class="number">1</span>)</span><br><span class="line">objective.SetMaximization()</span><br><span class="line"></span><br><span class="line">result_status = solver.Solve()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;status=&quot;</span> + <span class="built_in">str</span>(result_status))</span><br><span class="line"></span><br><span class="line"><span class="comment"># output the results</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Number of variables =&#x27;</span>, solver.NumVariables())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Number of constraints =&#x27;</span>, solver.NumConstraints())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Optimal objective value =&#x27;</span>, solver.Objective().Value())</span><br><span class="line">variable_list = [x1, x2, x3]</span><br><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> variable_list:</span><br><span class="line">    <span class="built_in">print</span>(variable.name(), variable.solution_value())</span><br></pre></td></tr></table></figure>
<p>The program output is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">status=<span class="number">0</span></span><br><span class="line">Number of variables = <span class="number">3</span></span><br><span class="line">Number of constraints = <span class="number">3</span></span><br><span class="line">Optimal objective value = <span class="number">55.333333333333336</span></span><br><span class="line">x1 <span class="number">10.0</span></span><br><span class="line">x2 <span class="number">12.666666666666664</span></span><br><span class="line">x3 <span class="number">20.0</span></span><br></pre></td></tr></table></figure>
<hr />
<h2 id="reference-links"><a class="markdownIt-Anchor" href="#reference-links"></a> Reference Links</h2>
<ul>
<li><a href="https://pypi.org/project/ortools/">ortools · PyPI</a></li>
<li><a href="https://developers.google.com/optimization/">developers.google.com</a></li>
<li><a href="https://kunlei.github.io/python-ortools-notes/">Hands-on Optimization with OR-Tools in Python (kunlei.github.io)</a></li>
<li><a href="https://www.cnblogs.com/PythonLearner/p/12903612.html">【Python代码】混合整数规划MIP/线性规划LP+python(ortool库)实现 - 忽逢桃林 - 博客园 (cnblogs.com)</a></li>
</ul>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>OR-Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Use the CPLEX Library in Python to Solve Linear Programming Problems</title>
    <url>/2024/04/10/Use-the-Cplex-library-in-Python-to-solve-linear-programming-problems/</url>
    <content><![CDATA[<h2 id="install-the-cplex-library"><a class="markdownIt-Anchor" href="#install-the-cplex-library"></a> Install the CPLEX Library</h2>
<p>Install the CPLEX library in Python:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install cplex</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h2>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>a</mi><mi>x</mi><mo>:</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>6</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>10</mn><msub><mi>x</mi><mn>3</mn></msub><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">Max: 2x_1+6x_2+10x_3\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">6</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p>
<p>S.T. :</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mn>1</mn><mo>:</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>&lt;</mo><mo>=</mo><mn>50</mn><mspace linebreak="newline"></mspace><mi>r</mi><mn>2</mn><mo>:</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mn>5</mn><msub><mi>x</mi><mn>2</mn></msub><mo>&lt;</mo><mo>=</mo><mn>20</mn><mspace linebreak="newline"></mspace><mi>r</mi><mn>3</mn><mo>:</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">r1: 2x_1+x_2-2x_3&lt;=50\\
	  r2:x_1-5x_2&lt;=20\\
	  r3:x_2+2x_3=10
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span></span></p>
<p>Bounds:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>&lt;</mo><mo>=</mo><mn>50</mn><mspace linebreak="newline"></mspace><mn>0</mn><mo>&lt;</mo><mo>=</mo><msub><mi>x</mi><mn>2</mn></msub><mspace linebreak="newline"></mspace><mn>0</mn><mo>&lt;</mo><mo>=</mo><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>r</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">x_1&lt;=50\\
0&lt;=x_2\\
0&lt;=x_3, Interger\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span class="mspace newline"></span></span></span></span></p>
<hr />
<h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cplex</span><br><span class="line"></span><br><span class="line"><span class="comment"># Initialize the model</span></span><br><span class="line">LP_problem = cplex.Cplex()</span><br><span class="line"><span class="comment"># Find the maximum</span></span><br><span class="line">LP_problem.objective.set_sense(LP_problem.objective.sense.maximize)</span><br><span class="line"><span class="comment"># The name of the decision variables</span></span><br><span class="line">var_name = [<span class="string">&quot;x1&quot;</span>, <span class="string">&quot;x2&quot;</span>, <span class="string">&quot;x3&quot;</span>]</span><br><span class="line"><span class="comment"># Coefficients of independent variables in the objective function</span></span><br><span class="line">obj_parameters = [<span class="number">2.0</span>, <span class="number">6.0</span>, <span class="number">10.0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># The upper bound of the value range of the decision variables</span></span><br><span class="line">x_upper_bound = [<span class="number">50.0</span>, cplex.infinity, cplex.infinity]</span><br><span class="line"><span class="comment"># The lower bound of the value range of the decision variable</span></span><br><span class="line">x_lower_bound = [-cplex.infinity, <span class="number">0.0</span>, <span class="number">0.0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Represents the type of 4 decision variables, where C stands for Continuous (floating-point number) and I stands for Integer</span></span><br><span class="line">var_type = <span class="string">&#x27;CCI&#x27;</span></span><br><span class="line">LP_problem.variables.add(obj=obj_parameters, ub=x_upper_bound, lb=x_lower_bound, types=var_type, names=var_name)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The lower limit of the value of the variable: &quot;</span>, LP_problem.variables.get_lower_bounds())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The upper limit of the value of the variable: &quot;</span>, LP_problem.variables.get_upper_bounds())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Variable Name: &quot;</span>, LP_problem.variables.get_names())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;=========================================================\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># In the constraint, L means less than or equal to, E means equal to, refer to the following links: https://www.ibm.com/docs/en/icos/12.9.0?topic=g-cpxxgetsense-cpxgetsense</span></span><br><span class="line">senses = <span class="string">&quot;LLE&quot;</span></span><br><span class="line">rhs = [<span class="number">50.0</span>, <span class="number">20.0</span>, <span class="number">10.0</span>]</span><br><span class="line">row_name = [<span class="string">&quot;r1&quot;</span>, <span class="string">&quot;r2&quot;</span>, <span class="string">&quot;r3&quot;</span>]</span><br><span class="line">rows = [[[<span class="string">&quot;x1&quot;</span>, <span class="string">&quot;x2&quot;</span>, <span class="string">&quot;x3&quot;</span>], [<span class="number">2.0</span>, <span class="number">1.0</span>, -<span class="number">2.0</span>]],</span><br><span class="line">        [[<span class="string">&quot;x1&quot;</span>, <span class="string">&quot;x2&quot;</span>, <span class="string">&quot;x3&quot;</span>], [<span class="number">1.0</span>, -<span class="number">5.0</span>, <span class="number">0.0</span>]],</span><br><span class="line">        [[<span class="string">&quot;x1&quot;</span>, <span class="string">&quot;x2&quot;</span>, <span class="string">&quot;x3&quot;</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">2.0</span>]]]</span><br><span class="line">LP_problem.linear_constraints.add(lin_expr=rows, senses=senses, rhs=rhs, names=row_name)</span><br><span class="line">LP_problem.solve()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Result output</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n=========================================================&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Objective Function Values: &quot;</span>, LP_problem.solution.get_objective_value())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Optimal solution: &quot;</span>, LP_problem.solution.get_values())</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="results"><a class="markdownIt-Anchor" href="#results"></a> Results</h2>
<p>The output of the program is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">The lower limit of the value of the variable:  [-<span class="number">1e+20</span>, <span class="number">0.0</span>, <span class="number">0.0</span>]</span><br><span class="line">The upper limit of the value of the variable:  [<span class="number">50.0</span>, <span class="number">1e+20</span>, <span class="number">1e+20</span>]</span><br><span class="line">Variable Name:  [<span class="string">&#x27;x1&#x27;</span>, <span class="string">&#x27;x2&#x27;</span>, <span class="string">&#x27;x3&#x27;</span>]</span><br><span class="line">=========================================================</span><br><span class="line"></span><br><span class="line">Version identifier: <span class="number">22.1</span><span class="number">.1</span><span class="number">.0</span> | <span class="number">2023</span>-02-09 | 22d6266e5</span><br><span class="line">CPXPARAM_Read_DataCheck                          <span class="number">1</span></span><br><span class="line">Found incumbent of value <span class="number">100.000000</span> after <span class="number">0.00</span> sec. (<span class="number">0.00</span> ticks)</span><br><span class="line">Tried aggregator <span class="number">2</span> times.</span><br><span class="line">Aggregator did <span class="number">1</span> substitutions.</span><br><span class="line">Reduced MIP has <span class="number">2</span> rows, <span class="number">2</span> columns, <span class="keyword">and</span> <span class="number">4</span> nonzeros.</span><br><span class="line">Reduced MIP has <span class="number">0</span> binaries, <span class="number">1</span> generals, <span class="number">0</span> SOSs, <span class="keyword">and</span> <span class="number">0</span> indicators.</span><br><span class="line">Presolve time = <span class="number">0.00</span> sec. (<span class="number">0.00</span> ticks)</span><br><span class="line">Tried aggregator <span class="number">1</span> time.</span><br><span class="line">MIP Presolve modified <span class="number">1</span> coefficients.</span><br><span class="line">Reduced MIP has <span class="number">2</span> rows, <span class="number">2</span> columns, <span class="keyword">and</span> <span class="number">4</span> nonzeros.</span><br><span class="line">Reduced MIP has <span class="number">0</span> binaries, <span class="number">2</span> generals, <span class="number">0</span> SOSs, <span class="keyword">and</span> <span class="number">0</span> indicators.</span><br><span class="line">Presolve time = <span class="number">0.00</span> sec. (<span class="number">0.00</span> ticks)</span><br><span class="line">MIP emphasis: balance optimality <span class="keyword">and</span> feasibility.</span><br><span class="line">MIP search method: dynamic search.</span><br><span class="line">Parallel mode: deterministic, using up to <span class="number">12</span> threads.</span><br><span class="line">Root relaxation solution time = <span class="number">0.00</span> sec. (<span class="number">0.00</span> ticks)</span><br><span class="line"></span><br><span class="line">        Nodes                                         Cuts/</span><br><span class="line">   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap</span><br><span class="line"></span><br><span class="line">*     <span class="number">0</span>+    <span class="number">0</span>                          <span class="number">100.0000</span>      <span class="number">120.0000</span>            <span class="number">20.00</span>%</span><br><span class="line">      <span class="number">0</span>     <span class="number">0</span>      <span class="number">108.3333</span>     <span class="number">2</span>      <span class="number">100.0000</span>      <span class="number">108.3333</span>        <span class="number">0</span>    <span class="number">8.33</span>%</span><br><span class="line">*     <span class="number">0</span>+    <span class="number">0</span>                          <span class="number">108.0000</span>      <span class="number">108.3333</span>             <span class="number">0.31</span>%</span><br><span class="line">      <span class="number">0</span>     <span class="number">0</span>        cutoff            <span class="number">108.0000</span>      <span class="number">108.3333</span>        <span class="number">0</span>    <span class="number">0.31</span>%</span><br><span class="line">Elapsed time = <span class="number">0.01</span> sec. (<span class="number">0.02</span> ticks, tree = <span class="number">0.01</span> MB, solutions = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">Root node processing (before b&amp;c):</span><br><span class="line">  Real time             =    <span class="number">0.01</span> sec. (<span class="number">0.02</span> ticks)</span><br><span class="line">Parallel b&amp;c, <span class="number">12</span> threads:</span><br><span class="line">  Real time             =    <span class="number">0.00</span> sec. (<span class="number">0.00</span> ticks)</span><br><span class="line">  Sync time (average)   =    <span class="number">0.00</span> sec.</span><br><span class="line">  Wait time (average)   =    <span class="number">0.00</span> sec.</span><br><span class="line">                          ------------</span><br><span class="line">Total (root+branch&amp;cut) =    <span class="number">0.01</span> sec. (<span class="number">0.02</span> ticks)</span><br><span class="line"></span><br><span class="line">=========================================================</span><br><span class="line">Objective Function Values:  <span class="number">108.0</span></span><br><span class="line">Optimal solution:  [<span class="number">28.0</span>, <span class="number">2.0</span>, <span class="number">4.0</span>]</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="reference-links"><a class="markdownIt-Anchor" href="#reference-links"></a> Reference Links</h2>
<ul>
<li><a href="https://www.ibm.com/docs/en/icos/12.9.0?topic=g-cpxxgetsense-cpxgetsense">CPXXgetsense and CPXgetsense - IBM Documentation</a></li>
<li><a href="https://blog.csdn.net/weixin_46034036/article/details/126813229">Python调用Cplex：安装，测试，实例_python cplex-CSDN博客</a></li>
</ul>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>CPLEX</tag>
      </tags>
  </entry>
</search>
